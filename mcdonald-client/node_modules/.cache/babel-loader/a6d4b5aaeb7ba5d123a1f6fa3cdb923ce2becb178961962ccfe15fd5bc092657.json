{"ast":null,"code":"var _jsxFileName = \"C:\\\\XAMPP\\\\htdocs\\\\projects\\\\NEWM-N425_Group-4\\\\mcdonald-client\\\\src\\\\pages\\\\ingredient\\\\ingredients.js\",\n  _s = $RefreshSig$();\nimport { settings } from \"../../config/config\";\nimport { NavLink, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/menu.module.css\";\nimport './ingredient.css';\nimport useXmlHttp from \"../../services/useXmlHttp\";\nimport { useAuth } from \"../../services/useAuth\";\nimport MenuStyles from \"../styles/menu.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ingredients = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    pathname\n  } = useLocation();\n  const [subHeading, setSubHeading] = useState(\"All Ingredients\");\n  const url = settings.baseApiUrl + \"/ingredients\";\n  console.log(url);\n  const {\n    error,\n    isLoading,\n    data: ingredients\n  } = useXmlHttp(url, \"GET\", {\n    Authorization: `Bearer ${user.jwt}`\n  });\n  useEffect(() => {\n    setSubHeading(\"All Ingredients\");\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: subHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content container\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-loading\",\n        children: [\"Please wait while data is being loaded\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../loading.gif`),\n          alt: \"Loading ......\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), ingredients && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient-list\",\n          children: [console.log(ingredients.data), ingredients.data.map(ingredient => /*#__PURE__*/_jsxDEV(NavLink, {\n            className: _ref => {\n              let {\n                isActive\n              } = _ref;\n              return isActive ? \"active\" : \"\";\n            },\n            to: `/ingredients/${ingredient.ingredientID}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ingredient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 52\n            }, this)]\n          }, ingredient.itemID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: /*#__PURE__*/_jsxDEV(Outlet, {\n            context: [subHeading, setSubHeading]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Ingredients, \"DKT5S2nZt3fKZXR7k70raVs935M=\", false, function () {\n  return [useAuth, useLocation, useXmlHttp];\n});\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["settings","NavLink","Outlet","useLocation","useState","useEffect","useXmlHttp","useAuth","MenuStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","Ingredients","_s","user","pathname","subHeading","setSubHeading","url","baseApiUrl","console","log","error","isLoading","data","ingredients","Authorization","jwt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","require","alt","map","ingredient","_ref","isActive","to","ingredientID","name","itemID","context","_c","$RefreshReg$"],"sources":["C:/XAMPP/htdocs/projects/NEWM-N425_Group-4/mcdonald-client/src/pages/ingredient/ingredients.js"],"sourcesContent":["import {settings} from \"../../config/config\";\r\nimport {NavLink, Outlet, useLocation} from \"react-router-dom\";\r\nimport {useState, useEffect} from \"react\";\r\nimport \"../styles/menu.module.css\";\r\nimport './ingredient.css';\r\nimport useXmlHttp from \"../../services/useXmlHttp\";\r\nimport {useAuth} from \"../../services/useAuth\";\r\nimport MenuStyles from \"../styles/menu.module.css\";\r\n\r\nconst Ingredients = () => {\r\n    const {user} = useAuth();\r\n    const {pathname} = useLocation();\r\n    const [subHeading, setSubHeading] = useState(\"All Ingredients\");\r\n    const url = settings.baseApiUrl + \"/ingredients\";\r\n    console.log(url);\r\n\r\n    const {\r\n        error,\r\n        isLoading,\r\n        data: ingredients\r\n    } = useXmlHttp(url, \"GET\", {Authorization:`Bearer ${user.jwt}`});\r\n\r\n    useEffect(() => {\r\n        setSubHeading(\"All Ingredients\");\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-heading\">\r\n                <div className=\"container\">Ingredients</div>\r\n            </div>\r\n            <div className=\"sub-heading\">\r\n                <div className=\"container\">{subHeading}</div>\r\n            </div>\r\n            <div className=\"main-content container\">\r\n                {/* {error && <div>{error}</div>} */}\r\n                {isLoading &&\r\n                    <div className=\"image-loading\">\r\n                        Please wait while data is being loaded\r\n                        <img src={require(`../loading.gif`)} alt=\"Loading ......\"/>\r\n                </div>}\r\n                {ingredients && <div className=\"ingredient-container\">\r\n                    <div className=\"ingredient-list\">\r\n                    {console.log(ingredients.data)}\r\n                        {ingredients.data.map((ingredient) => (\r\n                            \r\n                            <NavLink key={ingredient.itemID}\r\n                                     className={({isActive}) => isActive ? \"active\" : \"\"}\r\n                                     to={`/ingredients/${ingredient.ingredientID}`}>\r\n                                <span>&nbsp;</span><div>{ingredient.name}</div>\r\n                            </NavLink>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"ingredient\">\r\n                        <Outlet context={[subHeading, setSubHeading]}/>\r\n                    </div>\r\n                        </div>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ingredients;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}