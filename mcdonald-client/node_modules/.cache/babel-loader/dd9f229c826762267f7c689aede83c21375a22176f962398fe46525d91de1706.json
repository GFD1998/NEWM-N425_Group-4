{"ast":null,"code":"var _s = $RefreshSig$();\n/*\r\nName: your name\r\nDate: today's date\r\nFile: useAxios.js\r\nDescription: create a custom hook that use Axios to make HTTP calls and retrieve data from an API server.\r\n */\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nconst UseAxios = function (url) {\n  _s();\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let body = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  headers = {\n    ...{\n      \"Content-Type\": \"application/json\"\n    },\n    ...headers\n  };\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  //useEffect function\n  useEffect(() => {\n    const controller = new AbortController();\n    axios({\n      url: url,\n      method: method,\n      headers: headers,\n      data: body,\n      timeout: 2000\n    }).then(response => {\n      setIsLoading(false);\n      setError(null);\n      setData(response.data);\n    }).catch(error => {\n      setIsLoading(false);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(error.response);\n      } else if (error.request) {\n        setError(error.request);\n      } else {\n        setError(\"Error: \", error.message);\n      }\n    });\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(UseAxios, \"BrL/ccAk6aMG74MNflZ2HWw0sAg=\");\n_c = UseAxios;\nexport default UseAxios;\nvar _c;\n$RefreshReg$(_c, \"UseAxios\");","map":{"version":3,"names":["axios","useState","useEffect","UseAxios","url","_s","method","arguments","length","undefined","headers","body","data","setData","error","setError","isLoading","setIsLoading","controller","AbortController","timeout","then","response","catch","request","message","_c","$RefreshReg$"],"sources":["C:/XAMPP/htdocs/projects/NEWM-N425_Group-4/mcdonald-client/src/services/useAxios.js"],"sourcesContent":["/*\r\nName: your name\r\nDate: today's date\r\nFile: useAxios.js\r\nDescription: create a custom hook that use Axios to make HTTP calls and retrieve data from an API server.\r\n */\r\n\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst UseAxios = (url,\r\n                  method = \"GET\",\r\n                  headers = {},\r\n                  body = {}) => {\r\n    headers = {\r\n        ...{\"Content-Type\": \"application/json\"},\r\n        ...headers\r\n    };\r\n\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //useEffect function\r\n    useEffect(() => {\r\n        const controller = new AbortController;\r\n\r\n        axios({\r\n           url: url,\r\n           method: method,\r\n            headers: headers,\r\n            data: body,\r\n            timeout: 2000\r\n        })\r\n            .then(response => {\r\n                setIsLoading(false);\r\n                setError(null);\r\n                setData(response.data);\r\n            })\r\n            .catch(error => {\r\n                setIsLoading(false);\r\n                if(error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    setError(error.response)\r\n                } else if (error.request) {\r\n                    setError(error.request)\r\n                } else {\r\n                    setError(\"Error: \", error.message)\r\n                }\r\n            });\r\n    }, [url]);\r\n\r\n    return {data, isLoading, error};\r\n};\r\n\r\nexport default UseAxios;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEzC,MAAMC,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAGW;EAAAC,EAAA;EAAA,IAFdC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IACdG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IACZI,IAAI,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvBG,OAAO,GAAG;IACN,GAAG;MAAC,cAAc,EAAE;IAAkB,CAAC;IACvC,GAAGA;EACP,CAAC;EAED,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,IAAIC,eAAe,CAAD,CAAC;IAEtCnB,KAAK,CAAC;MACHI,GAAG,EAAEA,GAAG;MACRE,MAAM,EAAEA,MAAM;MACbI,OAAO,EAAEA,OAAO;MAChBE,IAAI,EAAED,IAAI;MACVS,OAAO,EAAE;IACb,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACdL,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,IAAI,CAAC;MACdF,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDW,KAAK,CAACT,KAAK,IAAI;MACZG,YAAY,CAAC,KAAK,CAAC;MACnB,IAAGH,KAAK,CAACQ,QAAQ,EAAE;QACf;QACA;QACAP,QAAQ,CAACD,KAAK,CAACQ,QAAQ,CAAC;MAC5B,CAAC,MAAM,IAAIR,KAAK,CAACU,OAAO,EAAE;QACtBT,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MAC3B,CAAC,MAAM;QACHT,QAAQ,CAAC,SAAS,EAAED,KAAK,CAACW,OAAO,CAAC;MACtC;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,CAACrB,GAAG,CAAC,CAAC;EAET,OAAO;IAACQ,IAAI;IAAEI,SAAS;IAAEF;EAAK,CAAC;AACnC,CAAC;AAACT,EAAA,CA5CIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}