{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport UseFetch from \"../../services/useFetch\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport JSONPretty from 'react-json-pretty';\nimport \"./menuitem.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMenuItem = _ref => {\n  let {\n    showModal,\n    setShowModal,\n    reload,\n    setReload,\n    setSubHeading\n  } = _ref;\n  // const {error, isLoading, data: response, create} = UseFetch();\n  // const [submitted, setSubmitted] = useState(false);\n  // const [showButton, setShowButton] = useState(true)\n\n  // const {register, handleSubmit, formState: {errors}} = useForm({\n  //     defaultValues: {id: \"\", name: \"\", email: \"\", major: \"\", gpa: \"\"},\n  //     shouldUseNativeValidation: false\n  // });\n\n  // const createFormOptions = {\n  //     id: {required: \"ID is required\"},\n  //     name: {required: \"Name is required\"},\n  //     email: {required: \"Email is required\"},\n  //     major: {required: \"Major is required\"},\n  //     gpa: {required: \"GPA is required\"}\n  // }\n\n  // const handleCreate = (student) => {\n  //     create(student);\n  //     setSubmitted(true);\n  // }\n\n  // useEffect(() => {\n  //     if (!submitted || error != null) {\n  //         setShowButton(true);\n  //     } else {\n  //         setShowButton(false);\n  //     }\n  // })\n\n  // const handleCancel = () => {\n  //     setShowModal(false);\n  //     setSubHeading(\"All Students\");\n  // }\n\n  // const handleClose = () => {\n  //     setShowModal(false);\n  //     setShowButton(true);\n  //     setSubmitted(false);\n  //     setSubHeading(\"All Students\");\n  //     setReload(!reload);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = CreateMenuItem;\nexport default CreateMenuItem;\nvar _c;\n$RefreshReg$(_c, \"CreateMenuItem\");","map":{"version":3,"names":["useState","useEffect","UseFetch","Button","Modal","useForm","JSONPretty","Fragment","_Fragment","jsxDEV","_jsxDEV","CreateMenuItem","_ref","showModal","setShowModal","reload","setReload","setSubHeading","_c","$RefreshReg$"],"sources":["C:/XAMPP/htdocs/projects/NEWM-N425_Group-4/mcdonald-client/src/pages/menuitem/createMenuItem.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport UseFetch from \"../../services/useFetch\";\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport {useForm} from \"react-hook-form\";\r\nimport JSONPretty from 'react-json-pretty';\r\nimport \"./menuitem.css\";\r\n\r\nconst CreateMenuItem = ({showModal, setShowModal, reload, setReload, setSubHeading}) => {\r\n    // const {error, isLoading, data: response, create} = UseFetch();\r\n    // const [submitted, setSubmitted] = useState(false);\r\n    // const [showButton, setShowButton] = useState(true)\r\n\r\n    // const {register, handleSubmit, formState: {errors}} = useForm({\r\n    //     defaultValues: {id: \"\", name: \"\", email: \"\", major: \"\", gpa: \"\"},\r\n    //     shouldUseNativeValidation: false\r\n    // });\r\n\r\n    // const createFormOptions = {\r\n    //     id: {required: \"ID is required\"},\r\n    //     name: {required: \"Name is required\"},\r\n    //     email: {required: \"Email is required\"},\r\n    //     major: {required: \"Major is required\"},\r\n    //     gpa: {required: \"GPA is required\"}\r\n    // }\r\n\r\n    // const handleCreate = (student) => {\r\n    //     create(student);\r\n    //     setSubmitted(true);\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     if (!submitted || error != null) {\r\n    //         setShowButton(true);\r\n    //     } else {\r\n    //         setShowButton(false);\r\n    //     }\r\n    // })\r\n\r\n    // const handleCancel = () => {\r\n    //     setShowModal(false);\r\n    //     setSubHeading(\"All Students\");\r\n    // }\r\n\r\n    // const handleClose = () => {\r\n    //     setShowModal(false);\r\n    //     setShowButton(true);\r\n    //     setSubmitted(false);\r\n    //     setSubHeading(\"All Students\");\r\n    //     setReload(!reload);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateMenuItem;"],"mappings":"AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAAQC,MAAM,EAAEC,KAAK,QAAO,iBAAiB;AAC7C,SAAQC,OAAO,QAAO,iBAAiB;AACvC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAO,gBAAgB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,cAAc,GAAGC,IAAA,IAAiE;EAAA,IAAhE;IAACC,SAAS;IAAEC,YAAY;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAAL,IAAA;EAC/E;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIF,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAACU,EAAA,GAjDIP,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}